{"ast":null,"code":"var _jsxFileName = \"/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      tempPersons: []\n    };\n\n    this.onSearchInput = event => {\n      var that = this;\n      let newList = [];\n      let currentList = this.state.persons;\n\n      if (event.target.value !== \"\") {\n        newList = currentList.filter(person => {\n          return person.name.includes(event.target.value);\n        });\n      } else {\n        newList = this.state.persons;\n      }\n\n      this.setState({\n        persons: newList\n      }); // if(event.target.value.length === 0){\n      //   this.setState(\n      //     {\n      //       persons: this.state.tempPersons\n      //     }\n      //   );\n      // }else{\n      //   let tempArray = that.state.persons;\n      //   tempArray.filter(person => {\n      //     return person.person.name === 'event.target.value';\n      //   });\n      // }\n\n      console.log(event.target.value);\n    };\n  }\n\n  componentDidMount() {\n    var that = this; //purposely delaying the call\n\n    setTimeout(function () {\n      that.fetchUserData();\n    }, 0);\n  }\n\n  fetchUserData() {\n    axios.get('https://jsonplaceholder.typicode.com/users ').then(res => {\n      this.setState({\n        persons: res.data,\n        tempPersons: res.data\n      });\n    });\n  }\n\n  render() {\n    const isPersonEmpty = this.state.persons;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSearchChange: this.onSearchInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), isPersonEmpty.length === 0 ? React.createElement(Spinner, {\n      description: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : React.createElement(PersonList, {\n      persons: this.state.persons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js"],"names":["React","axios","Spinner","SearchBar","PersonList","App","Component","state","persons","tempPersons","onSearchInput","event","that","newList","currentList","target","value","filter","person","name","includes","setState","console","log","componentDidMount","setTimeout","fetchUserData","get","then","res","data","render","isPersonEmpty","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAC,EADF;AAENC,MAAAA,WAAW,EAAE;AAFP,KADwB;;AAAA,SA2BhCC,aA3BgC,GA2BfC,KAAD,IAAW;AACzB,UAAIC,IAAI,GAAI,IAAZ;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,UAAIC,WAAW,GAAG,KAAKP,KAAL,CAAWC,OAA7B;;AACA,UAAGG,KAAK,CAACI,MAAN,CAAaC,KAAb,KAAuB,EAA1B,EAA6B;AAC3BH,QAAAA,OAAO,GAAGC,WAAW,CAACG,MAAZ,CAAmBC,MAAM,IAAI;AACrC,iBAAOA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBT,KAAK,CAACI,MAAN,CAAaC,KAAlC,CAAP;AACD,SAFS,CAAV;AAID,OALD,MAKK;AACHH,QAAAA,OAAO,GAAG,KAAKN,KAAL,CAAWC,OAArB;AACD;;AAED,WAAKa,QAAL,CAAc;AACZb,QAAAA,OAAO,EAAEK;AADG,OAAd,EAbyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAS,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAK,CAACI,MAAN,CAAaC,KAAzB;AAGD,KA3D+B;AAAA;;AAMhCQ,EAAAA,iBAAiB,GAAE;AACjB,QAAIZ,IAAI,GAAG,IAAX,CADiB,CAGjB;;AACAa,IAAAA,UAAU,CAAC,YAAU;AACnBb,MAAAA,IAAI,CAACc,aAAL;AACD,KAFS,EAEP,CAFO,CAAV;AAGD;;AAEDA,EAAAA,aAAa,GAAE;AACbzB,IAAAA,KAAK,CAAC0B,GAAN,CAAU,6CAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACX,WAAKR,QAAL,CACE;AACEb,QAAAA,OAAO,EAAEqB,GAAG,CAACC,IADf;AAEErB,QAAAA,WAAW,EAAEoB,GAAG,CAACC;AAFnB,OADF;AAMD,KARD;AASD;;AAoCDC,EAAAA,MAAM,GAAE;AACN,UAAMC,aAAa,GAAG,KAAKzB,KAAL,CAAWC,OAAjC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,cAAc,EAAE,KAAKE,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAIAsB,aAAa,CAACC,MAAd,KAAyB,CAAzB,GACE,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAI,KAAK1B,KAAL,CAAWC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFJ,CADF;AAgBD;;AA/E+B;;AAkFlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    persons:[],\n    tempPersons: []\n  }\n\n  componentDidMount(){\n    var that = this;\n\n    //purposely delaying the call\n    setTimeout(function(){\n      that.fetchUserData();\n    }, 0);\n  }\n\n  fetchUserData(){\n    axios.get('https://jsonplaceholder.typicode.com/users ')\n    .then(res => {\n      this.setState(\n        {\n          persons: res.data,\n          tempPersons: res.data\n        }\n        );\n    });\n  }\n\n  onSearchInput = (event) => {\n    var that  = this;\n    let newList = [];\n    let currentList = this.state.persons;\n    if(event.target.value !== \"\"){\n      newList = currentList.filter(person => {\n        return person.name.includes(event.target.value);\n      })\n      \n    }else{\n      newList = this.state.persons\n    }\n\n    this.setState({\n      persons: newList\n    });\n    // if(event.target.value.length === 0){\n    //   this.setState(\n    //     {\n    //       persons: this.state.tempPersons\n    //     }\n    //   );\n    // }else{\n    //   let tempArray = that.state.persons;\n    //   tempArray.filter(person => {\n    //     return person.person.name === 'event.target.value';\n    //   });\n    // }\n    \n    console.log(event.target.value);\n\n\n  }\n\n  render(){\n    const isPersonEmpty = this.state.persons;\n    return(\n      <div>\n         \n          <div className = \"container\">\n          <SearchBar onSearchChange={this.onSearchInput}/>\n       \n        {\n          isPersonEmpty.length === 0\n          ? <Spinner description = \"Loading\" /> \n          : <PersonList persons = {this.state.persons} />\n        }\n        \n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}