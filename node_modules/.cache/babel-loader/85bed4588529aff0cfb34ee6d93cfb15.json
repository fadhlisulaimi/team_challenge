{"ast":null,"code":"var _jsxFileName = \"/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport Error from './components/Error';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport ConfirmDialog from './components/ConfirmDialog';\nimport './css/style-main.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      tempPersons: [],\n      isSearchResultEmpty: false,\n      dialogPhone: \"\"\n    };\n\n    this.showMainLayout = (persons, isSearchResultEmpty) => {\n      if (!isSearchResultEmpty && persons.length === 0) {\n        return React.createElement(Spinner, {\n          description: \"Fetching users data...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainLayout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(SearchBar, {\n          onSearchChange: this.onHandleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), isSearchResultEmpty ? React.createElement(Error, {\n          description: \"No results\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }) : React.createElement(PersonList, {\n          persons: this.state.persons,\n          onCallButtonClick: this.onCallButtonClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.onCallButtonClick = event => {\n      this.setState({\n        dialogPhone: event.currentTarget.value\n      });\n    };\n\n    this.onCancelButtonClick = () => {\n      this.setState({\n        dialogPhone: \"\"\n      });\n    };\n\n    this.onHandleChange = event => {\n      var that = this;\n      let tmpList = [];\n\n      if (event.target.value !== \"\") {\n        tmpList = this.state.persons.filter(person => {\n          return person.name.includes(event.target.value) || person.username.includes(event.target.value) || person.email.includes(event.target.value);\n        });\n      } else {\n        tmpList = this.state.tempPersons;\n      }\n\n      this.setState({\n        isSearchResultEmpty: tmpList.length === 0 ? true : false,\n        persons: tmpList\n      });\n    };\n  }\n\n  componentDidMount() {\n    var that = this; //purposely delaying the call\n\n    setTimeout(function () {\n      that.fetchUserData();\n    }, 2000);\n  }\n\n  fetchUserData() {\n    axios.get('https://jsonplaceholder.typicode.com/users ').then(res => {\n      this.setState({\n        persons: res.data,\n        tempPersons: res.data\n      });\n    });\n  }\n\n  render() {\n    const persons = this.state.persons;\n    const isSearchResultEmpty = this.state.isSearchResultEmpty;\n    let dialogBox;\n\n    if (this.state.dialogPhone.length !== 0) {\n      dialogBox = React.createElement(ConfirmDialog, {\n        title: \"Contact\",\n        subHeading: this.state.dialogPhone,\n        onCancelButtonClick: this.onCancelButtonClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"layout-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, dialogBox, this.showMainLayout(persons, isSearchResultEmpty));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js"],"names":["React","axios","Spinner","Error","SearchBar","PersonList","ConfirmDialog","App","Component","state","persons","tempPersons","isSearchResultEmpty","dialogPhone","showMainLayout","length","onHandleChange","onCallButtonClick","event","setState","currentTarget","value","onCancelButtonClick","that","tmpList","target","filter","person","name","includes","username","email","componentDidMount","setTimeout","fetchUserData","get","then","res","data","render","dialogBox"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport Error from './components/Error';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport ConfirmDialog from './components/ConfirmDialog';\nimport './css/style-main.css';\n\nclass App extends React.Component {\n  state = {\n    persons:[],\n    tempPersons: [],\n    isSearchResultEmpty: false,\n    dialogPhone: \"\"\n  }\n\n  componentDidMount(){\n    var that = this;\n\n    //purposely delaying the call\n    setTimeout(function(){\n      that.fetchUserData();\n    }, 2000);\n  }\n\n  fetchUserData(){\n    axios.get('https://jsonplaceholder.typicode.com/users ')\n    .then(res => {\n      this.setState(\n        {\n          persons: res.data,\n          tempPersons: res.data\n        }\n        );\n    });\n  }\n\n  showMainLayout = (persons, isSearchResultEmpty) => {\n    if(!isSearchResultEmpty && persons.length === 0){\n      return <Spinner description = \"Fetching users data...\" />;\n    }else{\n      return(\n      <div className = \"mainLayout\">\n        <SearchBar onSearchChange={this.onHandleChange}/>\n        {\n        isSearchResultEmpty \n        ?  <Error description=\"No results\" />\n        :  <PersonList persons = {this.state.persons} onCallButtonClick={this.onCallButtonClick}/>\n        }\n      </div>\n      );\n      \n    }\n  }\n\n  onCallButtonClick = (event) => {\n    this.setState({\n      dialogPhone : event.currentTarget.value\n    })\n  }\n\n  onCancelButtonClick = () => {\n    this.setState({\n      dialogPhone : \"\"\n    })\n  }\n\n  onHandleChange = (event) => {\n    var that  = this;\n    let tmpList = [];\n    if(event.target.value !== \"\"){\n      tmpList = this.state.persons.filter(person => {\n        return person.name.includes(event.target.value) \n            || person.username.includes(event.target.value)\n            || person.email.includes(event.target.value);\n      })\n      \n    }else{\n      tmpList = this.state.tempPersons\n    }\n\n    this.setState({\n      isSearchResultEmpty: tmpList.length === 0 ? true : false,\n      persons: tmpList\n    });\n  }\n\n  render(){\n    const persons = this.state.persons;\n    const isSearchResultEmpty = this.state.isSearchResultEmpty;\n    let dialogBox;\n    if(this.state.dialogPhone.length !== 0){\n      dialogBox = <ConfirmDialog \n      title=\"Contact\"\n      subHeading={this.state.dialogPhone} \n      onCancelButtonClick = {this.onCancelButtonClick}\n      />;\n    }\n    return(\n      <div className = \"layout-container\">\n        {dialogBox}\n        {this.showMainLayout(persons, isSearchResultEmpty)}\n      </div>\n\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}