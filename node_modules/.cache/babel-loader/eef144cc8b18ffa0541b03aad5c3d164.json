{"ast":null,"code":"var _jsxFileName = \"/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonCard from './components/PersonCard';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      tempPersons: []\n    };\n  }\n\n  componentDidMount() {\n    var that = this; //purposely delaying the call\n\n    setTimeout(function () {\n      that.fetchUserData();\n    }, 0);\n  }\n\n  fetchUserData() {\n    axios.get('https://jsonplaceholder.typicode.com/users ').then(res => {\n      this.setState({\n        persons: res.data,\n        tempPersons: res.data\n      });\n    });\n  }\n\n  onSearchInput(event) {\n    if (event.target.value.length === 0) {\n      this.setState({\n        tempPersons: this.state.persons\n      });\n    }\n\n    console.log(event.target.value);\n  }\n\n  render() {\n    const isPersonEmpty = this.state.persons;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSearchChange: this.onSearchInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, isPersonEmpty.length === 0 ? React.createElement(Spinner, {\n      description: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : this.state.tempPersons.map(person => {\n      return React.createElement(PersonCard, {\n        person: person,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js"],"names":["React","axios","Spinner","SearchBar","PersonCard","App","Component","state","persons","tempPersons","componentDidMount","that","setTimeout","fetchUserData","get","then","res","setState","data","onSearchInput","event","target","value","length","console","log","render","isPersonEmpty","map","person"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAC,EADF;AAENC,MAAAA,WAAW,EAAE;AAFP,KADwB;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAE;AACjB,QAAIC,IAAI,GAAG,IAAX,CADiB,CAGjB;;AACAC,IAAAA,UAAU,CAAC,YAAU;AACnBD,MAAAA,IAAI,CAACE,aAAL;AACD,KAFS,EAEP,CAFO,CAAV;AAGD;;AAEDA,EAAAA,aAAa,GAAE;AACbZ,IAAAA,KAAK,CAACa,GAAN,CAAU,6CAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACX,WAAKC,QAAL,CACE;AACET,QAAAA,OAAO,EAAEQ,GAAG,CAACE,IADf;AAEET,QAAAA,WAAW,EAAEO,GAAG,CAACE;AAFnB,OADF;AAMD,KARD;AASD;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAO;AAClB,QAAGA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAjC,EAAmC;AACjC,WAAKN,QAAL,CACE;AACER,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC;AAD1B,OADF;AAKD;;AACDgB,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAN,CAAaC,KAAzB;AAED;;AAEDI,EAAAA,MAAM,GAAE;AACN,UAAMC,aAAa,GAAG,KAAKpB,KAAL,CAAWC,OAAjC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,cAAc,EAAE,KAAKW,aAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGAQ,aAAa,CAACJ,MAAd,KAAyB,CAAzB,GACE,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEE,KAAKhB,KAAL,CAAWE,WAAX,CAAuBmB,GAAvB,CAA2BC,MAAM,IAAI;AACrC,aAAO,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAIA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFG,CALF,CAFJ,CADF;AAgBD;;AAzD+B;;AA4DlC,eAAexB,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonCard from './components/PersonCard';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    persons:[],\n    tempPersons: []\n  }\n\n  componentDidMount(){\n    var that = this;\n\n    //purposely delaying the call\n    setTimeout(function(){\n      that.fetchUserData();\n    }, 0);\n  }\n\n  fetchUserData(){\n    axios.get('https://jsonplaceholder.typicode.com/users ')\n    .then(res => {\n      this.setState(\n        {\n          persons: res.data,\n          tempPersons: res.data\n        }\n        );\n    });\n  }\n\n  onSearchInput(event){\n    if(event.target.value.length === 0){\n      this.setState(\n        {\n          tempPersons: this.state.persons\n        }\n      );\n    }\n    console.log(event.target.value);\n\n  }\n\n  render(){\n    const isPersonEmpty = this.state.persons;\n    return(\n      <div>\n          <SearchBar onSearchChange={this.onSearchInput}/>\n          <div className = \"container\">\n       \n        {\n          isPersonEmpty.length === 0\n          ? <Spinner description = \"Loading\" /> \n          : this.state.tempPersons.map(person => {\n            return <PersonCard person = {person}/>;\n        })\n        }\n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}