{"ast":null,"code":"var _jsxFileName = \"/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport Dialog from './components/Dialog';\nimport './css/style-main.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      tempPersons: [],\n      isSearchResultEmpty: false,\n      isDialogBoxOpen: false\n    };\n\n    this.showMainLayout = (persons, isSearchResultEmpty) => {\n      if (!isSearchResultEmpty && persons.length === 0) {\n        return React.createElement(Spinner, {\n          description: \"Fetching users data...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainLayout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(SearchBar, {\n          onSearchChange: this.onHandleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), isSearchResultEmpty ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"No results...\")) : React.createElement(PersonList, {\n          persons: this.state.persons,\n          onCallButtonClick: this.onCallButtonClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.onCallButtonClick = event => {\n      this.setState({\n        isDialogBoxOpen: event.target.value !== \"close\" ? true : false\n      });\n    };\n\n    this.onHandleChange = event => {\n      var that = this;\n      let tmpList = [];\n\n      if (event.target.value !== \"\") {\n        tmpList = this.state.persons.filter(person => {\n          return person.name.includes(event.target.value) || person.username.includes(event.target.value) || person.email.includes(event.target.value);\n        });\n      } else {\n        tmpList = this.state.tempPersons;\n      }\n\n      this.setState({\n        isSearchResultEmpty: tmpList.length === 0 ? true : false,\n        persons: tmpList\n      });\n    };\n  }\n\n  componentDidMount() {\n    var that = this; //purposely delaying the call\n\n    setTimeout(function () {\n      that.fetchUserData();\n    }, 2000);\n  }\n\n  fetchUserData() {\n    axios.get('https://jsonplaceholder.typicode.com/users ').then(res => {\n      this.setState({\n        persons: res.data,\n        tempPersons: res.data\n      });\n    });\n  }\n\n  render() {\n    const persons = this.state.persons;\n    const isSearchResultEmpty = this.state.isSearchResultEmpty;\n    return React.createElement(\"div\", {\n      className: \"layout-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.isDialogBoxOpen ? React.createElement(Dialog, {\n      onCallButtonClick: this.onCallButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : this.showMainLayout(persons, isSearchResultEmpty));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js"],"names":["React","axios","Spinner","SearchBar","PersonList","Dialog","App","Component","state","persons","tempPersons","isSearchResultEmpty","isDialogBoxOpen","showMainLayout","length","onHandleChange","onCallButtonClick","event","setState","target","value","that","tmpList","filter","person","name","includes","username","email","componentDidMount","setTimeout","fetchUserData","get","then","res","data","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport Dialog from './components/Dialog';\nimport './css/style-main.css';\n\nclass App extends React.Component {\n  state = {\n    persons:[],\n    tempPersons: [],\n    isSearchResultEmpty: false,\n    isDialogBoxOpen: false\n  }\n\n  componentDidMount(){\n    var that = this;\n\n    //purposely delaying the call\n    setTimeout(function(){\n      that.fetchUserData();\n    }, 2000);\n  }\n\n  fetchUserData(){\n    axios.get('https://jsonplaceholder.typicode.com/users ')\n    .then(res => {\n      this.setState(\n        {\n          persons: res.data,\n          tempPersons: res.data\n        }\n        );\n    });\n  }\n\n  showMainLayout = (persons, isSearchResultEmpty) => {\n    if(!isSearchResultEmpty && persons.length === 0){\n      return <Spinner description = \"Fetching users data...\" />;\n    }else{\n      return(\n      <div className = \"mainLayout\">\n        <SearchBar onSearchChange={this.onHandleChange}/>\n        {\n        isSearchResultEmpty \n        ?  <div><h5>No results...</h5></div>\n        :  <PersonList persons = {this.state.persons} onCallButtonClick={this.onCallButtonClick}/>\n        }\n      </div>\n      );\n      \n    }\n  }\n\n  onCallButtonClick = (event) => {\n    this.setState({\n      isDialogBoxOpen: event.target.value !== \"close\" ? true : false\n    });\n  }\n\n  onHandleChange = (event) => {\n    var that  = this;\n    let tmpList = [];\n    if(event.target.value !== \"\"){\n      tmpList = this.state.persons.filter(person => {\n        return person.name.includes(event.target.value) \n            || person.username.includes(event.target.value)\n            || person.email.includes(event.target.value);\n      })\n      \n    }else{\n      tmpList = this.state.tempPersons\n    }\n\n    this.setState({\n      isSearchResultEmpty: tmpList.length === 0 ? true : false,\n      persons: tmpList\n    });\n  }\n\n  render(){\n    const persons = this.state.persons;\n    const isSearchResultEmpty = this.state.isSearchResultEmpty;\n    return(\n      <div className = \"layout-container\">\n        {\n          this.state.isDialogBoxOpen \n          ? <Dialog onCallButtonClick = {this.onCallButtonClick}/>\n          :  this.showMainLayout(persons, isSearchResultEmpty)\n        }\n      </div>\n\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}