{"ast":null,"code":"var _jsxFileName = \"/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      tempPersons: []\n    };\n\n    this.onHandleChange = event => {\n      var that = this;\n      let tmpList = [];\n\n      if (event.target.value !== \"\") {\n        tmpList = this.state.persons.filter(person => {\n          return person.name.includes(event.target.value);\n        });\n      } else {\n        tmpList = this.state.tempPersons;\n      }\n\n      this.setState({\n        persons: tmpList\n      });\n    };\n  }\n\n  componentDidMount() {\n    var that = this; //purposely delaying the call\n\n    setTimeout(function () {\n      that.fetchUserData();\n    }, 0);\n  }\n\n  fetchUserData() {\n    axios.get('https://jsonplaceholder.typicode.com/users ').then(res => {\n      this.setState({\n        persons: res.data,\n        tempPersons: res.data\n      });\n    });\n  }\n\n  render() {\n    const isPersonEmpty = this.state.persons;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSearchChange: this.onHandleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), isPersonEmpty.length === 0 ? React.createElement(Spinner, {\n      description: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }) : React.createElement(PersonList, {\n      persons: this.state.persons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js"],"names":["React","axios","Spinner","SearchBar","PersonList","App","Component","state","persons","tempPersons","onHandleChange","event","that","tmpList","target","value","filter","person","name","includes","setState","componentDidMount","setTimeout","fetchUserData","get","then","res","data","render","isPersonEmpty","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAC,EADF;AAENC,MAAAA,WAAW,EAAE;AAFP,KADwB;;AAAA,SA2BhCC,cA3BgC,GA2BdC,KAAD,IAAW;AAC1B,UAAIC,IAAI,GAAI,IAAZ;AACA,UAAIC,OAAO,GAAG,EAAd;;AACA,UAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,EAA1B,EAA6B;AAC3BF,QAAAA,OAAO,GAAG,KAAKN,KAAL,CAAWC,OAAX,CAAmBQ,MAAnB,CAA0BC,MAAM,IAAI;AAC5C,iBAAOA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBR,KAAK,CAACG,MAAN,CAAaC,KAAlC,CAAP;AACD,SAFS,CAAV;AAID,OALD,MAKK;AACHF,QAAAA,OAAO,GAAG,KAAKN,KAAL,CAAWE,WAArB;AACD;;AAED,WAAKW,QAAL,CAAc;AACZZ,QAAAA,OAAO,EAAEK;AADG,OAAd;AAGD,KA1C+B;AAAA;;AAMhCQ,EAAAA,iBAAiB,GAAE;AACjB,QAAIT,IAAI,GAAG,IAAX,CADiB,CAGjB;;AACAU,IAAAA,UAAU,CAAC,YAAU;AACnBV,MAAAA,IAAI,CAACW,aAAL;AACD,KAFS,EAEP,CAFO,CAAV;AAGD;;AAEDA,EAAAA,aAAa,GAAE;AACbtB,IAAAA,KAAK,CAACuB,GAAN,CAAU,6CAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACX,WAAKN,QAAL,CACE;AACEZ,QAAAA,OAAO,EAAEkB,GAAG,CAACC,IADf;AAEElB,QAAAA,WAAW,EAAEiB,GAAG,CAACC;AAFnB,OADF;AAMD,KARD;AASD;;AAmBDC,EAAAA,MAAM,GAAE;AACN,UAAMC,aAAa,GAAG,KAAKtB,KAAL,CAAWC,OAAjC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,cAAc,EAAE,KAAKE,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAIAmB,aAAa,CAACC,MAAd,KAAyB,CAAzB,GACE,oBAAC,OAAD;AAAS,MAAA,WAAW,EAAG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,GAEE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAI,KAAKvB,KAAL,CAAWC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFJ,CADF;AAgBD;;AA9D+B;;AAiElC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    persons:[],\n    tempPersons: []\n  }\n\n  componentDidMount(){\n    var that = this;\n\n    //purposely delaying the call\n    setTimeout(function(){\n      that.fetchUserData();\n    }, 0);\n  }\n\n  fetchUserData(){\n    axios.get('https://jsonplaceholder.typicode.com/users ')\n    .then(res => {\n      this.setState(\n        {\n          persons: res.data,\n          tempPersons: res.data\n        }\n        );\n    });\n  }\n\n  onHandleChange = (event) => {\n    var that  = this;\n    let tmpList = [];\n    if(event.target.value !== \"\"){\n      tmpList = this.state.persons.filter(person => {\n        return person.name.includes(event.target.value);\n      })\n      \n    }else{\n      tmpList = this.state.tempPersons\n    }\n\n    this.setState({\n      persons: tmpList\n    });\n  }\n\n  render(){\n    const isPersonEmpty = this.state.persons;\n    return(\n      <div>\n         \n          <div className = \"container\">\n          <SearchBar onSearchChange={this.onHandleChange}/>\n       \n        {\n          isPersonEmpty.length === 0\n          ? <Spinner description = \"Loading\" /> \n          : <PersonList persons = {this.state.persons} />\n        }\n        \n      </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}