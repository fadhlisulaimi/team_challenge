{"ast":null,"code":"var _jsxFileName = \"/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js\";\nimport './css/style-main.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport Error from './components/Error';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport ConfirmDialog from './components/ConfirmDialog';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      tempPersons: [],\n      isSearchResultEmpty: false,\n      dialogPhone: \"\"\n    };\n\n    this._onCallButtonClick = event => {\n      this.setState({\n        dialogPhone: event.currentTarget.value\n      });\n    };\n\n    this._onCancelButtonClick = () => {\n      this.setState({\n        dialogPhone: \"\"\n      });\n    };\n\n    this._onHandleChange = event => {\n      var that = this;\n      let tmpList = [];\n\n      if (event.target.value !== \"\") {\n        tmpList = this.state.persons.filter(person => {\n          return person.name.includes(event.target.value) || person.username.includes(event.target.value) || person.email.includes(event.target.value);\n        });\n      } else {\n        tmpList = this.state.tempPersons;\n      }\n\n      this.setState({\n        isSearchResultEmpty: tmpList.length === 0 ? true : false,\n        persons: tmpList\n      });\n    };\n\n    this._showMainLayout = (persons, isSearchResultEmpty) => {\n      if (!isSearchResultEmpty && persons.length === 0) {\n        return React.createElement(Spinner, {\n          description: \"Fetching users data...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          className: \"mainLayout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(SearchBar, {\n          onSearchChange: this._onHandleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), isSearchResultEmpty ? React.createElement(Error, {\n          description: \"No results\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }) : React.createElement(PersonList, {\n          persons: this.state.persons,\n          onCallButtonClick: this._onCallButtonClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    var that = this; //to purposely delaying the call\n\n    setTimeout(function () {\n      that._fetchUserData();\n    }, 0);\n  }\n\n  _fetchUserData() {\n    axios.get('https://jsonplaceholder.typicode.com/users ').then(res => {\n      this.setState({\n        persons: res.data,\n        tempPersons: res.data\n      });\n    });\n  }\n\n  render() {\n    const persons = this.state.persons;\n    const isSearchResultEmpty = this.state.isSearchResultEmpty;\n    let dialogBox;\n\n    if (this.state.dialogPhone.length !== 0) {\n      let phone = this.state.dialogPhone;\n      dialogBox = React.createElement(ConfirmDialog, {\n        title: \"Contact:\",\n        subHeading: phone,\n        onCancelButtonClick: this._onCancelButtonClick,\n        primaryDescription: phone,\n        dangerDescription: \"Close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"layout-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, dialogBox, this._showMainLayout(persons, isSearchResultEmpty));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/fadhli/Desktop/TeamChallenge/team-challenge/src/App.js"],"names":["React","axios","Spinner","Error","SearchBar","PersonList","ConfirmDialog","App","Component","state","persons","tempPersons","isSearchResultEmpty","dialogPhone","_onCallButtonClick","event","setState","currentTarget","value","_onCancelButtonClick","_onHandleChange","that","tmpList","target","filter","person","name","includes","username","email","length","_showMainLayout","componentDidMount","setTimeout","_fetchUserData","get","then","res","data","render","dialogBox","phone"],"mappings":"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","sourcesContent":["import './css/style-main.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Spinner from './components/Spinner';\nimport Error from './components/Error';\nimport SearchBar from './components/SearchBar';\nimport PersonList from './components/PersonList';\nimport ConfirmDialog from './components/ConfirmDialog';\n\nclass App extends React.Component {\n  state = {\n    persons:[],\n    tempPersons: [],\n    isSearchResultEmpty: false,\n    dialogPhone: \"\"\n  }\n\n  componentDidMount(){\n    var that = this;\n\n    //to purposely delaying the call\n    setTimeout(function(){\n      that._fetchUserData();\n    }, 0);\n  }\n\n  _fetchUserData(){\n    axios.get('https://jsonplaceholder.typicode.com/users ')\n    .then(res => {\n      this.setState(\n        {\n          persons: res.data,\n          tempPersons: res.data\n        }\n        );\n    });\n  }\n\n  _onCallButtonClick = (event) => {\n    this.setState({\n      dialogPhone : event.currentTarget.value\n    })\n  }\n\n  _onCancelButtonClick = () => {\n    this.setState({\n      dialogPhone : \"\"\n    })\n  }\n\n  _onHandleChange = (event) => {\n    var that  = this;\n    let tmpList = [];\n    if(event.target.value !== \"\"){\n      tmpList = this.state.persons.filter(person => {\n        return person.name.includes(event.target.value) \n            || person.username.includes(event.target.value)\n            || person.email.includes(event.target.value);\n      })\n      \n    }else{\n      tmpList = this.state.tempPersons\n    }\n\n    this.setState({\n      isSearchResultEmpty: tmpList.length === 0 ? true : false,\n      persons: tmpList\n    });\n  }\n\n  _showMainLayout = (persons, isSearchResultEmpty) => {\n    if(!isSearchResultEmpty && persons.length === 0){\n      return <Spinner description = \"Fetching users data...\" />;\n    }else{\n      return(\n      <div className = \"mainLayout\">\n        <SearchBar onSearchChange={this._onHandleChange}/>\n        {\n        isSearchResultEmpty \n        ?  <Error description=\"No results\" />\n        :  <PersonList persons = {this.state.persons} onCallButtonClick={this._onCallButtonClick}/>\n        }\n      </div>\n      );\n      \n    }\n  }\n\n  render(){\n    const persons = this.state.persons;\n    const isSearchResultEmpty = this.state.isSearchResultEmpty;\n    let dialogBox;\n\n    if(this.state.dialogPhone.length !== 0){\n      let phone = this.state.dialogPhone;\n      dialogBox = <ConfirmDialog \n        title=\"Contact:\"\n        subHeading={phone} \n        onCancelButtonClick = {this._onCancelButtonClick}\n        primaryDescription = {phone}\n        dangerDescription = \"Close\"\n      />;\n    }\n    return(\n      <div className = \"layout-container\">\n        {dialogBox}\n        {this._showMainLayout(persons, isSearchResultEmpty)}\n      </div>\n\n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}